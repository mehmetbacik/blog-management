"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(auth)/login/layout",{

/***/ "(app-pages-browser)/./src/services/api.ts":
/*!*****************************!*\
  !*** ./src/services/api.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminService: function() { return /* binding */ adminService; },\n/* harmony export */   authService: function() { return /* binding */ authService; },\n/* harmony export */   commentService: function() { return /* binding */ commentService; },\n/* harmony export */   postService: function() { return /* binding */ postService; },\n/* harmony export */   services: function() { return /* binding */ services; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _utils_api_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/api-error */ \"(app-pages-browser)/./src/utils/api-error.ts\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dompurify */ \"(app-pages-browser)/./node_modules/dompurify/dist/purify.es.mjs\");\n\n\n\nconst api = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n    baseURL: \"http://localhost:3000/api\" || 0,\n    timeout: 10000\n});\napi.interceptors.request.use((config)=>{\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    return config;\n});\napi.interceptors.response.use((response)=>response, async (error)=>{\n    if (error.code === \"ECONNABORTED\") {\n        throw new Error(\"Request timeout. Please try again.\");\n    }\n    if (!error.response) {\n        throw new Error(\"Network error. Please check your connection and try again.\");\n    }\n    return Promise.reject(await (0,_utils_api_error__WEBPACK_IMPORTED_MODULE_0__.handleApiError)(error));\n});\nconst authService = {\n    login: async (email, password)=>{\n        const { data } = await api.post(\"/users/login\", {\n            email,\n            password\n        });\n        return data;\n    },\n    register: async (userData)=>{\n        const { data } = await api.post(\"/users/register\", userData);\n        return data;\n    },\n    getProfile: async ()=>{\n        const { data } = await api.get(\"/users/profile\");\n        return data;\n    },\n    updateProfile: async (data)=>{\n        const { data: response } = await api.put(\"/users/profile\", data);\n        return response;\n    }\n};\nconst postService = {\n    getPosts: async ()=>{\n        const { data } = await api.get(\"/posts\");\n        return data;\n    },\n    getPost: async (id)=>{\n        try {\n            const response = await api.get(\"/posts/\".concat(id));\n            console.log(\"API Response:\", response.data);\n            // Ensure we have an author object\n            if (!response.data.author) {\n                response.data.author = {\n                    _id: \"deleted\",\n                    username: \"Deleted User\"\n                };\n            }\n            return response.data;\n        } catch (error) {\n            console.error(\"API Error:\", error);\n            throw (0,_utils_api_error__WEBPACK_IMPORTED_MODULE_0__.handleApiError)(error);\n        }\n    },\n    createPost: async (postData)=>{\n        const { data } = await api.post(\"/posts\", postData);\n        return data;\n    },\n    updatePost: async (id, postData)=>{\n        const { data } = await api.put(\"/posts/\".concat(id), postData);\n        return data;\n    },\n    deletePost: async (id)=>{\n        const { data } = await api.delete(\"/posts/\".concat(id));\n        return data;\n    },\n    getUserPosts: async (params)=>{\n        const searchParams = new URLSearchParams();\n        if (params === null || params === void 0 ? void 0 : params.userId) searchParams.append(\"userId\", params.userId);\n        if (params === null || params === void 0 ? void 0 : params.page) searchParams.append(\"page\", params.page.toString());\n        if (params === null || params === void 0 ? void 0 : params.limit) searchParams.append(\"limit\", params.limit.toString());\n        if (params === null || params === void 0 ? void 0 : params.status) searchParams.append(\"status\", params.status);\n        const { data } = await api.get(\"/posts/user?\".concat(searchParams.toString()));\n        return data;\n    },\n    searchPosts: async (params)=>{\n        const searchParams = new URLSearchParams();\n        if (params.query) searchParams.append(\"query\", params.query);\n        if (params.tags) searchParams.append(\"tags\", params.tags);\n        if (params.page) searchParams.append(\"page\", params.page.toString());\n        if (params.limit) searchParams.append(\"limit\", params.limit.toString());\n        const { data } = await api.get(\"/posts/search?\".concat(searchParams.toString()));\n        return data;\n    }\n};\nconst adminService = {\n    getAllUsers: async ()=>{\n        const { data } = await api.get(\"/admin/users\");\n        return data;\n    },\n    updateUserRole: async (userId, role)=>{\n        const { data } = await api.put(\"/admin/users/\".concat(userId), {\n            role\n        });\n        return data;\n    },\n    getStats: async ()=>{\n        const { data } = await api.get(\"/admin/stats\");\n        return data;\n    },\n    getAllPosts: async (params)=>{\n        const searchParams = new URLSearchParams();\n        if (params === null || params === void 0 ? void 0 : params.status) searchParams.append(\"status\", params.status);\n        if (params === null || params === void 0 ? void 0 : params.search) searchParams.append(\"search\", params.search);\n        if (params === null || params === void 0 ? void 0 : params.page) searchParams.append(\"page\", params.page.toString());\n        if (params === null || params === void 0 ? void 0 : params.limit) searchParams.append(\"limit\", params.limit.toString());\n        const { data } = await api.get(\"/admin/posts?\".concat(searchParams.toString()));\n        return data;\n    },\n    updatePostStatus: async (postId, status)=>{\n        const { data } = await api.put(\"/admin/posts/\".concat(postId, \"/status\"), {\n            status\n        });\n        return data;\n    },\n    getPostById: async (postId)=>{\n        const { data } = await api.get(\"/admin/posts/\".concat(postId));\n        return data;\n    },\n    deletePost: async (postId)=>{\n        await api.delete(\"/admin/posts/\".concat(postId));\n    }\n};\nconst commentService = {\n    getComments: async function(postId) {\n        let page = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, limit = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 10;\n        try {\n            const { data } = await api.get(\"/posts/\".concat(postId, \"/comments\"), {\n                params: {\n                    page,\n                    limit\n                }\n            });\n            return data;\n        } catch (error) {\n            throw (0,_utils_api_error__WEBPACK_IMPORTED_MODULE_0__.handleApiError)(error);\n        }\n    },\n    createComment: async (data)=>{\n        try {\n            // Sanitize content before sending\n            const sanitizedContent = dompurify__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sanitize(data.content);\n            const response = await api.post(\"/posts/\".concat(data.postId, \"/comments\"), {\n                content: sanitizedContent\n            });\n            return response.data;\n        } catch (error) {\n            throw (0,_utils_api_error__WEBPACK_IMPORTED_MODULE_0__.handleApiError)(error);\n        }\n    },\n    deleteComment: async (postId, commentId)=>{\n        try {\n            await api.delete(\"/posts/\".concat(postId, \"/comments/\").concat(commentId));\n        } catch (error) {\n            throw (0,_utils_api_error__WEBPACK_IMPORTED_MODULE_0__.handleApiError)(error);\n        }\n    }\n};\nconst services = {\n    auth: authService,\n    post: postService,\n    comment: commentService,\n    admin: adminService\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (services);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/api.ts\n"));

/***/ })

});